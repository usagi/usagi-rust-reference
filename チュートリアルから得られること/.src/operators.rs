fn main( )
{
  let a = 111.111e+1f32;
  let b = 222.222e-1f32;

  // 算術演算子
  println!
    ( "{}\n{}\n{}\n{}\n{}\n"
    , a - b
    , a + b
    , a % b
    , a / b
    , a * b
    );
  
  // ビット演算子
  println!
    ( "{}\n{}\n{}\n{}\n{}\n"
    , 65536u >> 8u
    , 1u << 24u
    , 0x1234u & 0b1100110011001100u
    , 0x1234u | 0b1100110011001100u
    , 0x1234u ^ 0b1100110011001100u
    );

  // 比較演算子
  println!
    ( "{}\n{}\n{}\n{}\n{}\n{}\n"
    , a == b
    , a != b
    , a < b
    , a > b
    , a <= b
    , a >= b
    );

  // 遅延評価・比較演算子
  println!
    ( "{}"
    , true && false || true
    );

  // 翻訳時・プリミティブ数値型・型変換演算子
  println!
    ( "{}\n{}\n{}\n{}\n{}\n{}\n"
    , 123456.7890123f64 as i8
    , 123456.7890123f64 as u8
    , 123456.7890123f64 as u16
    , 123456.7890123f64 as u32
    , 123456.7890123f64 as f32
    , 123456.7890123f64
    );
  
  // 翻訳時・同一サイズ型・型変換関数
  let f:f32 = unsafe{ std::mem::transmute( 0x41C80000u32 ) };
  println!( "{}", f );
  
}
